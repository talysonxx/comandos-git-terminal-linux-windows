crie o arquivo webpack.config.js com o conteúdo
===========
const path = require('path')

module.exports = {
	entry: './src/index.js',
	output: {
		path: path.resolve(__dirname, 'dist'),
		filename: 'bundle.js'
	}
}
==========

crie a pasta src com o arquivo index.js

npm init

npm i -D webpack webpack-cli

npm install --save-dev webpack webpack-cli

no package.json, adicione nos scripts
========
"build": "webpack --mode production"
======

npm run build

npm i @babel/core babel-loader @babel/preset-env @babel/preset-react --save-dev

no arquivo webpack.config.js, logo após output: { ...code ..}, adicione
=============
modules: {
	rules: [
		{
			test: /\.(js|jsx)$/,
			exclude: /nod_modules/,
			use: {
				loader: "babel-loader"
			}
		}
	]
}

deverá ficar assim
module.exports = {
	entry: './src/index.js',
	output: {
		path: path.resolve(__dirname, 'dist'),
		filename: 'bundle.js'
	},
    module: {
        rules: [
            {
                test: /\.(js|jsx)$/,
                exclude: /nod_modules/,
                use: {
                    loader: "babel-loader"
                }
            }
        ]
    }
}
=====================

crie os arqvuios padrões react (index.html, App.js; dentro do src)

crie o arquivo .babelrc na raiz

npm i react react-dom

no arquivo babel coloque
=======
{
	"presets": [
		"@babel/preset-env",
		"@babel/preset-react"
	]
}
=======

em scripts no package.json adicione
=======
"dev": "webpack --mode development"
======

npm i -D babel-preset-react

npm run dev

npm i html-webpack-plugin

ao topo do webpack.config.js, adicione
======
const HtmlWebPackPlugin = require('html-webpack-plugin')
=====

após module, adicione
=====
plugins: [
        new HtmlWebPackPlugin({
            template: './src/index.html',
            filename: './index.html'
        })
    ]
=====

npm run build

npm i -D webpack-dev-server

em scripts no package.json, adicione
===========
"start:dev": "webpack-dev-server"
=======

npm run star:dev